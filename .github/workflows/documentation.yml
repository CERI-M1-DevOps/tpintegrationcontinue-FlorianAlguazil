name: Documentation Generation

on:
  push:
    branches:
      - main  # Déclenche le workflow lorsqu'un commit est poussé dans la branche `main`

jobs:
  generate-documentation:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du dépôt
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Permet d'avoir tout l'historique du dépôt pour pousser

      # Étape 2 : Configuration de Java
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      # Étape 3 : Génération de la documentation Javadoc avec Maven
      - name: Generate Javadoc
        run: mvn -B javadoc:javadoc  # Utilisation de la commande Maven pour générer la documentation

      # Étape 4 : Configuration de Git (Nom et Email)
      - name: Set Git configuration
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      # Étape 5 : Déploiement de la documentation sur GitHub Pages
      - name: Deploy Javadoc to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.DOC }}  # Token GitHub pour l'authentification
          publish_dir: ./target/reports/apidocs  # Répertoire contenant la documentation générée par Maven
          publish_branch: gh-pages  # Branche où déployer la documentation (gh-pages)
          user_name: 'github-actions'  # Nom de l'utilisateur pour l'engagement
          user_email: 'github-actions@github.com'  # Email de l'utilisateur pour l'engagement
